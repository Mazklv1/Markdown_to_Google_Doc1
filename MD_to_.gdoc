function onOpen() {
  // Add a custom menu to the Google Docs UI
  var ui = DocumentApp.getUi();
  ui.createMenu('Custom Menu')
      .addItem('Master Format', 'masterFormat')
      .addToUi();
}

function masterFormat() {
  // Get the entire content of the Google Doc as markdown text
  var doc = DocumentApp.getActiveDocument();
  var body = doc.getBody();
  var markdownText = body.getText();
  
  // Clear the existing content
  body.clear();
  
  // Convert the markdown text to Google Docs formatting
  markdownToGoogleDocs(markdownText);
}

function markdownToGoogleDocs(markdown) {
  // Get the active document
  var doc = DocumentApp.getActiveDocument();
  
  // Split the markdown text into lines
  var lines = markdown.split('\n');
  
  // Iterate over each line and process the markdown
  for (var i = 0; i < lines.length; i++) {
    var line = lines[i];
    var isBold = false;

    // Check if the line starts with **
    if (line.trim().startsWith('**') && line.trim().endsWith('**')) {
      isBold = true;
      line = line.trim().substring(2, line.trim().length - 2); // Remove **
    }

    // Check for headers
    if (line.startsWith('#')) {
      var level = line.lastIndexOf('#') + 1;
      var text = line.substr(level).trim();
      var header = doc.getBody().appendParagraph(text);
      header.setHeading(DocumentApp.ParagraphHeading['HEADING' + level]);
      if (isBold) {
        header.editAsText().setBold(0, text.length, true);
      }
    }
    // Check for unordered lists
    else if (line.trim().startsWith('-')) {
      var text = line.trim().substr(1).trim();
      var listItem = doc.getBody().appendListItem(text);
      listItem.setGlyphType(DocumentApp.GlyphType.BULLET);
      doc.getBody().appendParagraph(''); // Add blank space after bullet point
    }
    // Process normal text and bold/italic formatting
    else {
      var paragraph = doc.getBody().appendParagraph(line);
      var text = paragraph.editAsText();
      
      // Apply bold formatting
      var boldPattern = /\*\*(.*?)\*\*/g;
      var match;
      while (match = boldPattern.exec(line)) {
        text.setBold(match.index, match.index + match[1].length + 1, true);
        text.deleteText(match.index + match[1].length + 1, match.index + match[1].length + 2);
        text.deleteText(match.index, match.index + 1);
      }
      
      // Apply italic formatting
      var italicPattern = /_(.*?)_/g;
      while (match = italicPattern.exec(line)) {
        text.setItalic(match.index, match.index + match[1].length + 1, true);
        text.deleteText(match.index + match[1].length + 1, match.index + match[1].length + 2);
        text.deleteText(match.index, match.index + 1);
      }
    }
  }
  
  // Save the document
  doc.saveAndClose();
}
